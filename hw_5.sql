-- Практическое задание по теме “Операторы, фильтрация, сортировка и ограничение”
-- Задание №1 Пусть в таблице users поля created_at и updated_at оказались незаполненными. 
-- Заполните их текущими датой и временем.

-- взял пустую бд, наполнил таблицу users данными обнулил столбцы
USE shop;
SELECT * FROM users;
INSERT INTO `users`(id, name, birthday_at) VALUES ('1','Jaylon Turner','2013-12-09'),
('2','Althea Pagac','1987-06-21'),
('3','Jamil Bergnaum Jr.','2006-02-28'),
('4','Micheal Roberts III','2018-09-26'),
('5','Destini Bashirian Jr.','1993-12-19'),
('6','Mrs. Kaci Runolfsdottir','2013-09-08'),
('7','Dr. Rosendo Daniel','2012-04-07'),
('8','Brianne Hilll','1975-03-25'),
('9','Fidel Quigley','1984-10-03'),
('10','Kenny Waelchi II','2010-04-18'); 
UPDATE users SET created_at = NULL, updated_at=NULL;

-- заполняем created_at и updated_at текущей датой с помощью функции now()
UPDATE users SET created_at = now(), updated_at=now();

-- Задание №2 
-- Таблица users была неудачно спроектирована. Записи created_at и updated_at были 
-- заданы типом VARCHAR и в них долгое время помещались значения в формате "20.10.2017 8:10". 
-- Необходимо преобразовать поля к типу DATETIME, сохранив введеные ранее значения

TRUNCATE users;
SELECT * FROM users;
ALTER TABLE users MODIFY created_at VARCHAR(255); 
ALTER TABLE users MODIFY updated_at VARCHAR(255);

INSERT INTO `users`(id, name, birthday_at, created_at, updated_at) VALUES ('1','Jaylon Turner','2013-12-09','20.10.2017 8:10','20.10.2017 8:10'),
('2','Althea Pagac','1987-06-21','20.10.2017 8:10','20.10.2017 8:10'),
('3','Jamil Bergnaum Jr.','2006-02-28','20.10.2017 8:10','20.10.2017 8:10'),
('4','Micheal Roberts III','2018-09-26','20.10.2017 8:10','20.10.2017 8:10'),
('5','Destini Bashirian Jr.','1993-12-19','20.10.2017 8:10','20.10.2017 8:10'),
('6','Mrs. Kaci Runolfsdottir','2013-09-08','20.10.2017 8:10','20.10.2017 8:10'),
('7','Dr. Rosendo Daniel','2012-04-07','20.10.2017 8:10','20.10.2017 8:10'),
('8','Brianne Hilll','1975-03-25','20.10.2017 8:10','20.10.2017 8:10'),
('9','Fidel Quigley','1984-10-03','20.10.2017 8:10','20.10.2017 8:10'),
('10','Kenny Waelchi II','2010-04-18','20.10.2017 8:10','20.10.2017 8:10'); 
-- проверяем работу функции str_to_date
SELECT str_to_date(created_at, '%d.%m.%Y %h:%i') FROM users;
-- обновляем данные в столбцах приводя их к стандартному виду записи 0000-00-00 00:00:00 для
-- послудующего преобразования столбца к заданному типу DATETIME
UPDATE users SET created_at = str_to_date(created_at, '%d.%m.%Y %h:%i'),
	updated_at = str_to_date(updated_at, '%d.%m.%Y %h:%i');
SELECT * FROM users;
-- преобразуем столбцы к типу DATETIME без потере данных
ALTER TABLE users MODIFY created_at DATETIME;
ALTER TABLE users MODIFY updated_at DATETIME;

-- Задание №3
-- В таблице складских запасов storehouses_products в поле value могут встречаться самые 
-- разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы. Необходимо 
-- отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. 
-- Однако, нулевые запасы должны выводиться в конце, после всех записей.

SELECT * FROM storehouses_products;
INSERT INTO `storehouses_products` VALUES ('1','4','2','0','2015-05-10 05:59:49','1996-04-18 06:15:16'),
('2','9','2','0','1973-12-12 03:36:04','1975-01-26 18:59:51'),
('3','4','8','0','2016-02-29 21:13:58','1989-03-14 03:49:54'),
('4','8','1','0','2017-12-13 15:17:51','1970-06-12 06:53:20'),
('5','1','5','0','1989-11-08 22:42:25','2016-11-03 00:29:59'),
('6','6','7','0','1995-04-14 20:18:42','1987-06-24 10:44:48'),
('7','1','4','0','1999-04-29 18:01:10','2018-05-13 06:37:34'),
('8','3','6','0','1985-06-03 05:18:54','2004-11-02 15:02:47'),
('9','5','9','0','2003-01-06 08:07:06','1989-09-11 22:31:00'),
('10','1','5','0','2000-07-25 05:37:52','1979-12-02 17:31:34'),
('11','5','1','8','1974-01-22 14:43:44','2009-02-05 01:07:08'),
('12','4','8','8','1999-09-01 05:23:04','2002-08-11 00:34:50'),
('13','5','9','5','1997-06-07 01:42:43','1984-04-19 00:01:53'),
('14','1','5','7','1974-02-18 17:57:19','1972-12-17 04:04:39'),
('15','4','2','5','2012-10-03 21:57:24','2017-05-05 18:25:27'),
('16','6','4','1','1990-02-17 06:59:47','2006-10-31 14:10:10'),
('17','9','9','5','2006-08-14 23:15:27','1999-08-28 11:10:37'),
('18','1','6','3','1995-05-28 23:47:23','2006-12-12 05:20:57'),
('19','4','8','9','2006-08-07 09:25:56','2000-06-19 15:37:14'),
('20','4','8','1','1973-01-15 20:47:29','1970-01-19 19:59:06'); 
-- сортируем сначала с помощью IF в случае значения value отличного от нуля то есть истины выводим 0, если
-- value равен 0 то есть ложь выводим 1 таким образом сортирум и выводим сначала товары запасы которых больше
-- нуля и следом в конце все нулевые товары фактически сортируем 0 и 1 по убыванию. Затем добавляем ещё
-- одну сортировку которая сортируе уже отсортированный массив в котором нули в конце соответственно сортируются 
-- оставшиеся значения по возрастанию 
SELECT * FROM storehouses_products ORDER BY IF(value, 0, 1), value;

-- Задание №4
-- (по желанию) Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае. 
-- Месяцы заданы в виде списка английских названий ('may', 'august')
TRUNCATE users;
INSERT INTO `users`(name, birthday_at, created_at, updated_at) VALUES ('Hayley Hermann','2018-09-05','1990-06-01 12:28:26','1993-09-22 03:58:27'),
('Andres Little','2009-05-24','2018-05-16 19:41:42','2009-06-11 07:54:00'),
('Miss Samanta Maggio','1987-04-13','1998-09-29 15:56:12','2018-11-02 19:37:10'),
('Evie Hoppe','2010-06-20','1999-01-28 10:37:39','1974-01-07 05:00:56'),
('Loren Wuckert MD','1992-10-03','1972-08-27 07:24:52','2011-05-26 11:08:40'),
('Marion Abbott','1982-05-08','1974-02-25 13:57:51','2004-05-16 09:57:48'),
('Abbigail Schaden IV','2018-11-10','2015-01-09 21:26:27','2006-06-29 11:25:21'),
('Prof. Jovanny Collier','1981-12-23','2018-01-26 17:35:03','2010-06-03 09:42:23'),
('Chelsie Swaniawski','1995-07-04','2019-03-29 21:57:25','2001-07-20 03:47:02'),
('Santino Kuhn','1994-08-21','2000-11-15 09:26:31','2005-03-18 09:21:10'),
('Sigrid Mayert DDS','1973-04-03','1998-06-08 23:59:00','1993-05-14 06:03:19'),
('Mariela Langosh MD','2017-11-06','1977-12-11 03:43:12','1989-09-02 05:53:22'),
('Edward Botsford','1977-09-06','2004-06-03 20:38:40','2005-02-21 20:42:18'),
('Jan Walsh','1993-08-02','1985-01-23 14:40:41','1970-08-30 15:00:50'),
('Clovis Kunde','1975-04-29','2003-12-16 10:33:53','2007-07-21 19:16:39'),
('Easton Conroy','2015-11-21','1990-05-31 19:53:01','1990-03-21 04:22:00'),
('Dolores Hirthe','1999-07-11','1972-06-05 09:13:53','2010-09-22 12:55:25'),
('Dante Carter IV','2018-11-27','1995-08-02 08:13:26','1982-07-12 00:06:50'),
('Mr. Edison Bode DDS','1984-03-04','1971-11-28 16:32:26','1984-04-08 10:17:51'),
('Trudie Murphy','1994-09-05','1977-07-25 04:14:50','1977-08-10 04:03:04'),
('Dr. Callie Schiller','2018-11-23','1996-04-22 22:15:15','2012-03-09 01:54:36'),
('Vena Hirthe','1980-04-20','2005-11-05 06:16:15','1981-01-30 23:33:52'),
('Miss Bianka Cronin','2015-12-20','1979-04-03 07:12:28','1993-12-10 11:08:12'),
('Hans Bins','1973-02-01','2018-06-22 00:16:39','1973-07-13 17:18:03'),
('Boris Zboncak Sr.','2011-11-06','1974-05-08 08:47:35','2004-04-18 02:11:58'),
('Zachariah Predovic','2011-08-23','2012-08-12 21:58:25','1980-06-15 00:01:08'),
('Dr. Jenifer Shanahan DDS','1976-09-18','2009-12-03 14:04:49','1985-03-01 21:04:10'),
('Loyal Wintheiser','1971-06-30','2009-04-30 00:55:10','1978-10-27 14:44:26'),
('Abby Schuppe','2012-04-28','1977-12-29 11:46:49','1979-05-27 17:02:54'),
('Jefferey Pfeffer','1974-06-19','2009-09-10 05:01:55','2005-10-20 19:16:44'),
('Garnett Wiegand','1970-07-09','2013-03-03 19:21:21','2014-04-27 10:19:51'),
('Prof. Thad Harris','1972-08-22','1987-05-17 08:47:14','1974-01-23 14:55:38'),
('Annabel Connelly','1973-09-22','2006-10-04 19:07:02','1987-07-13 10:59:21'),
('Aaliyah Walsh','1986-05-12','1999-02-28 23:21:01','2019-01-30 23:08:24'),
('Ms. Macy Sipes','2006-06-29','1989-02-06 02:01:24','1991-03-30 07:05:35'),
('Dr. Elvis Schroeder DVM','2016-10-03','1990-10-29 16:19:29','1975-03-30 01:47:25'),
('Laila Daniel II','1991-10-20','2004-05-05 15:46:23','2004-01-23 19:35:27'),
('Dr. Ismael Berge','2003-10-17','1979-08-19 07:47:17','1981-01-09 14:22:34'),
('Ollie Labadie','1979-05-28','1983-02-21 11:15:08','2013-03-09 13:08:54'),
('Miss Verona Beier II','1980-04-10','2012-08-10 00:46:34','1988-06-27 09:07:46'),
('Archibald Adams','1974-02-25','1977-04-25 20:26:51','1988-07-31 19:35:25'),
('Dr. Colby Reynolds','2012-06-16','1996-08-20 22:26:49','2015-11-05 20:42:26'),
('Anabel Willms','2015-03-11','1975-09-29 06:34:11','2006-05-31 19:36:28'),
('Kaycee Tromp','1999-04-17','2004-06-22 16:52:35','2003-12-18 03:16:16'),
('Tavares Morissette','1990-09-20','1979-07-21 20:51:40','1976-05-02 09:50:44'),
('Murl Rau','1982-09-17','1980-03-03 22:21:33','2002-11-05 00:43:14'),
('Afton Stark','2009-06-13','1999-03-31 16:49:17','1993-12-22 16:36:32'),
('Korey Kuphal','2007-09-06','1991-08-29 14:08:36','1999-01-28 13:14:44'),
('Rita Bosco','2013-01-04','1997-06-27 05:03:49','2014-12-12 01:06:00'),
('Chaz Medhurst','1984-12-05','2003-06-17 02:44:00','1985-03-15 22:18:40'),
('Dr. Chadd Stamm','1979-06-13','1988-09-08 09:36:49','1990-02-11 05:32:44'),
('Nakia Smitham','1987-09-11','1976-12-31 15:53:15','2014-08-13 10:48:24'),
('Dean Bosco','1998-10-25','2015-03-06 15:49:14','1988-06-17 21:38:07'),
('Jerrold Mann','1998-04-23','1973-11-30 09:59:50','2001-10-05 12:30:06'),
('Luis O\'Connell II','2013-04-05','2018-08-28 08:27:51','2014-10-23 22:48:36'),
('Alexandro Willms','1975-11-28','1970-10-07 19:51:34','1998-11-21 11:37:00'),
('Marcelle Beatty','1985-11-08','1993-06-21 22:45:51','1971-12-28 00:35:36'),
('Rachel West','1997-12-20','1996-09-27 19:01:25','1998-11-10 11:50:51'),
('Cecelia Miller','1999-08-12','1993-02-17 16:38:28','1986-01-03 13:22:02'),
('Damien Oberbrunner','1981-02-18','1980-09-11 19:20:15','1971-08-29 08:13:31'),
('Mr. Roel Kirlin DDS','1984-10-16','2008-09-03 01:50:38','1982-09-17 18:41:58'),
('Mr. Jaiden Kessler Jr.','2008-09-11','2006-04-10 17:06:54','1982-02-05 11:20:24'),
('Ms. Zula Kuphal','2006-08-08','2015-02-13 01:34:35','2009-09-26 15:57:39'),
('Teresa Lynch PhD','1971-05-29','1982-08-20 21:11:53','1979-07-11 15:47:27'),
('Logan Runolfsson','1993-04-09','1997-02-24 11:43:12','2004-03-22 05:53:22'),
('Chloe Stark Sr.','1979-12-28','1984-08-30 06:05:34','2019-02-05 13:10:31'),
('Montana Hagenes','2008-03-07','2012-09-07 09:04:26','1985-10-18 07:50:13'),
('Immanuel Johns DVM','2016-05-01','1993-05-07 15:03:54','1997-07-18 17:32:37'),
('Carey Swift','1999-12-16','1992-01-27 12:54:54','2002-10-21 06:42:21'),
('Wallace Lynch','2005-02-15','1982-03-05 03:00:21','1983-11-29 05:48:59'),
('Flavie Zieme','1988-02-06','2016-02-02 20:52:08','1993-03-25 23:48:16'),
('Destini Hane','2002-04-19','1985-08-15 03:41:48','1989-04-19 18:21:27'),
('Jon Deckow','1985-09-18','1976-02-18 00:35:42','1971-02-25 17:46:08'),
('Miss Angela Harvey Sr.','2002-06-16','1993-02-18 05:18:46','1984-12-15 14:20:06'),
('Prof. Aleen Connelly V','1977-08-26','1974-05-11 00:02:39','2018-07-05 14:56:39'),
('Mrs. Margaretta Hyatt DVM','1971-04-21','2010-08-06 23:40:12','2012-06-18 22:57:47'),
('Arnoldo Raynor','2006-02-23','1980-09-07 02:17:32','1999-07-11 05:54:11'),
('Mrs. Elfrieda Rogahn IV','1977-09-04','2005-10-26 17:59:44','1993-08-18 01:09:48'),
('Kamren White','2008-11-18','1990-06-04 09:26:18','2006-12-06 06:15:30'),
('Marjolaine Zulauf','1994-04-24','1997-09-04 05:55:03','1977-05-17 20:41:42'),
('Prof. Juana Leuschke MD','1994-08-01','2016-08-08 13:14:39','2007-06-18 08:08:43'),
('Vada Botsford V','1980-01-17','2019-05-15 19:19:16','2000-05-17 06:14:09'),
('Laurine Kuvalis','1985-04-22','1978-10-14 20:48:26','2013-11-01 06:54:36'),
('Layla Metz MD','1982-10-03','1990-07-12 09:00:10','2018-09-16 15:43:16'),
('Jett Murazik','1972-07-27','1986-07-01 01:23:03','2009-10-01 16:26:24'),
('Miss Vergie Grant','1977-05-29','2004-02-09 01:56:13','1971-09-05 03:16:29'),
('Abelardo Heathcote','1972-01-20','1979-09-20 02:17:13','2010-06-01 05:37:23'),
('Oren D\'Amore','1999-11-04','2007-08-22 05:30:15','1986-08-31 06:44:40'),
('Coleman Bechtelar','2006-05-27','1979-10-09 12:21:31','1990-12-08 20:23:33'),
('Mr. Ruben Purdy','1972-09-18','1978-05-19 22:45:06','1994-04-20 05:55:17'),
('Lenny Smith','2005-10-20','1987-09-16 19:20:33','1970-06-08 11:08:22'),
('Prof. Jerod Weissnat I','2001-10-08','1979-08-24 04:16:38','1986-05-08 08:07:57'),
('Dr. Greyson Frami III','1970-12-18','2015-01-08 15:02:57','2016-12-21 14:12:16'),
('Ms. Stephanie Abernathy III','1994-06-07','2018-10-27 03:45:34','1987-10-09 00:32:44'),
('Mr. Elmo Stiedemann','1981-02-02','1973-11-20 12:29:22','2016-12-12 12:01:16'),
('Clark Hilpert','1974-09-29','1981-04-02 18:12:26','1994-04-17 03:42:33'),
('Kariane O\'Kon V','1995-08-23','1980-03-04 01:40:48','1999-08-12 17:59:36'),
('Jessika Padberg','1994-01-29','1986-01-05 21:16:55','2018-08-05 10:40:53'),
('Brooks Pouros','1975-09-19','1994-01-20 07:08:38','1989-12-21 17:35:00'),
('Jordy Cormier','1982-05-22','1984-05-07 22:16:50','1976-03-26 15:55:28'); 

SELECT date_format(birthday_at, '%d %M %Y') FROM users;
ALTER TABLE users MODIFY birthday_at VARCHAR(255);
UPDATE users SET birthday_at = date_format(birthday_at, '%d %M %Y');
SELECT* FROM users;
-- Заданный формат данных
-- '1', 'Jaylon Turner', '09 December 2013', '2017-10-20 08:10:00', '2017-10-20 08:10:00'
-- '2', 'Althea Pagac', '21 June 1987', '2017-10-20 08:10:00', '2017-10-20 08:10:00'
-- '3', 'Jamil Bergnaum Jr.', '28 February 2006', '2017-10-20 08:10:00', '2017-10-20 08:10:00'
SELECT * FROM users WHERE birthday_at LIKE '%may%' or birthday_at LIKE '%august%'; 
select * FROM users WHERE month(birthday_at) = 05 or month(birthday_at) = 08; -- вариант подсказанный преподавателем
SELECT name FROM users WHERE DATE_FORMAT(birthday_at, '%M') IN ('may', 'august'); -- вариант из разбора ДЗ

-- Задание №5
-- (по желанию) Из таблицы catalogs извлекаются записи при помощи запроса. 
-- SELECT * FROM catalogs WHERE id IN (5, 1, 2); Отсортируйте записи в порядке, заданном в списке IN.
INSERT INTO `catalogs`(id, name) VALUES ('1','Hoeger, Johnston and Runte'),
('2','Schimmel LLC'),
('3','Kiehn and Sons'),
('4','Douglas, Beatty and Waters'),
('5','Skiles Ltd'),
('6','Conn-Schowalter'),
('7','Bradtke-Crooks'),
('8','Dicki-Haag'),
('9','Ruecker, Beer and Trantow'),
('10','Koelpin LLC'),
('11','Rath PLC'),
('12','Collier-Rohan'),
('13','Yundt, Bergstrom and Bernier'),
('14','Schiller Ltd'),
('15','Bosco, Hansen and Bahringer'),
('16','Kiehn-Lowe'),
('17','Mills-Wehner'),
('18','Gusikowski, Price and Feil'),
('19','Heller-Stiedemann'),
('20','Will, Lemke and Witting'); 
SELECT *FROM catalogs;
SELECT * FROM catalogs WHERE id IN (5, 1, 2);
-- принцып тотже что и с товаромна складе, сначала первой 5 затем сортируем то что осталось
SELECT * FROM catalogs WHERE id IN (5, 1, 2) ORDER BY IF(id!=5, 1, 0), id;
SELECT * FROM catalogs WHERE id IN (5, 1, 2) ORDER BY field(id, 5, 1, 2); -- вариант подсказанный преподавателем

-- *******************Практическое задание теме “Агрегация данных” ***********************
-- Задание №1 Подсчитайте средний возраст пользователей в таблице users

-- получается что ROUND даёт более точный  результат при округлении до 0 знаков чем FLOOR разница 27 и 26 соответственно  
SELECT ROUND(AVG(timestampdiff(YEAR, birthday_at, now())), 0) as age FROM users;

-- Задание №2 Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. 
-- Следует учесть, что необходимы дни недели текущего года, а не года рождения.

-- Долго ломал голову что бы через один селект, но так и не получилось поэтому сделеал через временную таблицу
CREATE TEMPORARY TABLE IF NOT EXISTS users_correct(
	name VARCHAR(255),
    birthday_at DATE
);
-- поместил в нее отформатированные даты рождения пользователей с заменённым годом на текущий 2019
INSERT INTO users_correct(name, birthday_at) SELECT name, date_format(birthday_at, '2019-%m-%d') from users;
SELECT * FROM users_correct;
-- далее делаем выборку с форматированием даты выводя только день недели уже текущего года и групируем по этому значению
-- От себя еще добавил отсортировку по убыванию
SELECT date_format(birthday_at, '%a') as day_of_birthday, COUNT(*) as total FROM users_correct GROUP BY day_of_birthday ORDER BY total DESC;
-- Wed	23
-- Thu	20
-- Fri	17
DROP TABLE IF EXISTS users_correct;

-- Задание №3 (по желанию) Подсчитайте произведение чисел в столбце таблицы

-- наверное самое легкое задание потому что самому додуматься до такого нужны глубокие познания в математике, а гугл
-- пестрит этим решением поэтому тут чесно скопированный код других решений не смог придумать.
CREATE TEMPORARY TABLE IF NOT EXISTS val(
	`value` INT 
);
INSERT INTO val VALUES (1),(2),(3),(4),(5);
SELECT * FROM val;
SELECT round(exp(sum(ln(value))),0) as mul FROM val;
